@model Portfolio_Management.Models.StaffActionsViewModel

<!-- page content -->
<div class="col-md-3 col-sm-4 col-xs-6">
    <div class="x_panel">
        <div class="x_title">
            <h2>Exit</h2>
            <ul class="nav navbar-right panel_toolbox">
                @*<li>
                        <a href="/Educations/Create" role="button" aria-expanded="false"><i class="fa fa-plus-square"></i></a>
                    </li>*@
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>
                <li>
                    <a class="close-link"><i class="fa fa-close"></i></a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            @if (Model.StaffSelected.Exit_Date != null)
            {
                <p>@Html.DisplayFor(Model => Model.StaffSelected.Staff_Name) Has an Exit Date of @Html.DisplayFor(Model => Model.StaffSelected.Exit_Date)</p>
                <div>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.StaffSelected.ID)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.StaffSelected.ID)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.StaffSelected.Staff_Name)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.StaffSelected.Staff_Name)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.StaffSelected.Hire_Date)
                        </dt>
                        <dd>
                            @Html.DisplayNameFor(model => model.StaffSelected.Hire_Date)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.StaffSelected.Exit_Date)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.StaffSelected.Exit_Date)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.StaffSelected.Exit_Reason_ID.Value)
                        </dt>
                        <dd>
                            @Html.DisplayNameFor(model => model.StaffSelected.Exit_Reason_ID.Value)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.StaffSelected.Is_Eligible_for_Rehire)
                        </dt>
                        <dd>
                            @Html.DisplayNameFor(model => model.StaffSelected.Is_Eligible_for_Rehire)
                        </dd>

                    </dl>
                </div>
            }
            else
            {
                using (Html.BeginForm("Edit", "Staff"))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.StaffSelected.ID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.StaffSelected.Exit_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StaffSelected.Exit_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StaffSelected.Exit_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StaffSelected.Exit_Note, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StaffSelected.Exit_Note, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StaffSelected.Exit_Note, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StaffSelected.Exit_Reason_ID, "Exit_Reason_ID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Exit_Reason_ID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StaffSelected.Exit_Reason_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StaffSelected.Is_Eligible_for_Rehire, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.StaffSelected.Is_Eligible_for_Rehire)
                                    @Html.ValidationMessageFor(model => model.StaffSelected.Is_Eligible_for_Rehire, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
<!-- /page content -->
